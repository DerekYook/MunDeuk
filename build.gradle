plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.together'
version = '0.0.1-SNAPSHOT'

java {
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web MVC 적용
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring Security적용
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'

	// JSTL등록
	//implementation 'javax.servlet:jstl' // SpringBoot 3.0 미만
	implementation 'jakarta.servlet:jakarta.servlet-api' // SpringBoot 3.0 이상
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' // SpringBoot 3.0 이상
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' // SpringBoot 3.0 이상

	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

	implementation 'org.apache.tiles:tiles-jsp:3.0.8'
	implementation 'org.apache.tiles:tiles-servlet:3.0.8'
	implementation 'org.apache.tiles:tiles-core:3.0.8'
	implementation 'org.apache.tiles:tiles-api:3.0.8'
	implementation 'org.apache.tiles:tiles-el:3.0.8'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	testLogging {
		showStandardStreams = true
		events "passed", "skipped", "failed"
	}
}
kotlin {
    jvmToolchain(17)
}